---
// Component props can be defined here if needed
---

<div class="max-w-2xl mx-auto">
  <div class="relative">
    <input
      type="text"
      id="search"
      class="w-full px-4 py-3 rounded-lg bg-white text-gray-800 focus:outline-none focus:ring-2 focus:ring-green-500"
      placeholder="Search by location, features, or name..."
    />
    <button
      type="submit"
      id="search-button"
      class="absolute right-2 top-1/2 -translate-y-1/2 bg-green-700 text-white px-4 py-2 rounded-md hover:bg-green-800 transition-colors"
    >
      Search
    </button>
  </div>
  
  <div id="search-results" class="mt-4 bg-white rounded-lg shadow-lg hidden">
    <!-- Results will be populated here -->
  </div>
</div>

<script>
  const searchInput = document.querySelector('#search');
  const searchButton = document.querySelector('#search-button');
  const searchResults = document.querySelector('#search-results');

  // Function to trigger search
  function performSearch() {
    const searchTerm = searchInput.value.toLowerCase();
    // Dispatch a custom event that the main page can listen to
    document.dispatchEvent(new CustomEvent('playground-search', {
      detail: { searchTerm }
    }));
  }

  // Add event listeners
  searchInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      performSearch();
    }
  });

  searchButton.addEventListener('click', performSearch);

  // Show/hide results
  searchInput.addEventListener('focus', () => {
    if (searchInput.value.trim()) {
      searchResults.classList.remove('hidden');
    }
  });

  // Hide results when clicking outside
  document.addEventListener('click', (e) => {
    if (!searchInput.contains(e.target) && !searchResults.contains(e.target)) {
      searchResults.classList.add('hidden');
    }
  });
</script> 